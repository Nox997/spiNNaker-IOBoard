////////////////////////////////////////////////////////////////////////////////
// Copyright (c) 1995-2012 Xilinx, Inc.  All rights reserved.
////////////////////////////////////////////////////////////////////////////////
//   ____  ____ 
//  /   /\/   / 
// /___/  \  /    Vendor: Xilinx 
// \   \   \/     Version : 14.1
//  \   \         Application : sch2hdl
//  /   /         Filename : Encoder_16_to_4.vf
// /___/   /\     Timestamp : 08/08/2012 17:09:39
// \   \  /  \ 
//  \___\/\___\ 
//
//Command: sch2hdl -intstyle ise -family xbr -verilog C:/Users/jt/Dropbox/D-Thesis/Cpld/SpinLink/Encoder_16_to_4.vf -w C:/Users/jt/Dropbox/D-Thesis/Cpld/SpinLink/Encoder_16_to_4.sch
//Design Name: Encoder_16_to_4
//Device: xbr
//Purpose:
//    This verilog netlist is translated from an ECS schematic.It can be 
//    synthesized and simulated, but it should not be modified. 
//
`timescale 1ns / 1ps

module NOR8_MXILINX_Encoder_16_to_4(I0, 
                                    I1, 
                                    I2, 
                                    I3, 
                                    I4, 
                                    I5, 
                                    I6, 
                                    I7, 
                                    O);

    input I0;
    input I1;
    input I2;
    input I3;
    input I4;
    input I5;
    input I6;
    input I7;
   output O;
   
   wire S0;
   wire S1;
   
   OR4  I_36_110 (.I0(I0), 
                 .I1(I1), 
                 .I2(I2), 
                 .I3(I3), 
                 .O(S0));
   OR4  I_36_127 (.I0(I4), 
                 .I1(I5), 
                 .I2(I6), 
                 .I3(I7), 
                 .O(S1));
   NOR2  I_36_140 (.I0(S0), 
                  .I1(S1), 
                  .O(O));
endmodule
`timescale 1ns / 1ps

module OR8_MXILINX_Encoder_16_to_4(I0, 
                                   I1, 
                                   I2, 
                                   I3, 
                                   I4, 
                                   I5, 
                                   I6, 
                                   I7, 
                                   O);

    input I0;
    input I1;
    input I2;
    input I3;
    input I4;
    input I5;
    input I6;
    input I7;
   output O;
   
   wire S0;
   wire S1;
   
   OR2  I_36_94 (.I0(S0), 
                .I1(S1), 
                .O(O));
   OR4  I_36_95 (.I0(I4), 
                .I1(I5), 
                .I2(I6), 
                .I3(I7), 
                .O(S1));
   OR4  I_36_112 (.I0(I0), 
                 .I1(I1), 
                 .I2(I2), 
                 .I3(I3), 
                 .O(S0));
endmodule
`timescale 1ns / 1ps

module Encoder_16_to_4(SYMBOL_IN, 
                       DATA_OUT);

    input [16:0] SYMBOL_IN;
   output [4:0] DATA_OUT;
   
   wire XLXN_45;
   wire XLXN_46;
   wire XLXN_47;
   wire XLXN_48;
   wire XLXN_94;
   wire XLXN_95;
   wire XLXN_96;
   wire XLXN_97;
   
   (* HU_SET = "XLXI_1_40" *) 
   OR8_MXILINX_Encoder_16_to_4  XLXI_1 (.I0(SYMBOL_IN[15]), 
                                       .I1(SYMBOL_IN[13]), 
                                       .I2(SYMBOL_IN[11]), 
                                       .I3(SYMBOL_IN[9]), 
                                       .I4(SYMBOL_IN[7]), 
                                       .I5(SYMBOL_IN[5]), 
                                       .I6(SYMBOL_IN[3]), 
                                       .I7(SYMBOL_IN[1]), 
                                       .O(XLXN_46));
   (* HU_SET = "XLXI_3_41" *) 
   OR8_MXILINX_Encoder_16_to_4  XLXI_3 (.I0(SYMBOL_IN[15]), 
                                       .I1(SYMBOL_IN[14]), 
                                       .I2(SYMBOL_IN[11]), 
                                       .I3(SYMBOL_IN[10]), 
                                       .I4(SYMBOL_IN[7]), 
                                       .I5(SYMBOL_IN[6]), 
                                       .I6(SYMBOL_IN[3]), 
                                       .I7(SYMBOL_IN[2]), 
                                       .O(XLXN_47));
   (* HU_SET = "XLXI_5_42" *) 
   NOR8_MXILINX_Encoder_16_to_4  XLXI_5 (.I0(SYMBOL_IN[13]), 
                                        .I1(SYMBOL_IN[12]), 
                                        .I2(SYMBOL_IN[9]), 
                                        .I3(SYMBOL_IN[8]), 
                                        .I4(SYMBOL_IN[5]), 
                                        .I5(SYMBOL_IN[4]), 
                                        .I6(SYMBOL_IN[1]), 
                                        .I7(SYMBOL_IN[0]), 
                                        .O(XLXN_48));
   (* HU_SET = "XLXI_6_43" *) 
   NOR8_MXILINX_Encoder_16_to_4  XLXI_6 (.I0(SYMBOL_IN[14]), 
                                        .I1(SYMBOL_IN[12]), 
                                        .I2(SYMBOL_IN[10]), 
                                        .I3(SYMBOL_IN[8]), 
                                        .I4(SYMBOL_IN[6]), 
                                        .I5(SYMBOL_IN[4]), 
                                        .I6(SYMBOL_IN[2]), 
                                        .I7(SYMBOL_IN[0]), 
                                        .O(XLXN_45));
   AND2  XLXI_7 (.I0(XLXN_45), 
                .I1(XLXN_46), 
                .O(DATA_OUT[0]));
   AND2  XLXI_8 (.I0(XLXN_48), 
                .I1(XLXN_47), 
                .O(DATA_OUT[1]));
   (* HU_SET = "XLXI_9_44" *) 
   OR8_MXILINX_Encoder_16_to_4  XLXI_9 (.I0(SYMBOL_IN[15]), 
                                       .I1(SYMBOL_IN[14]), 
                                       .I2(SYMBOL_IN[13]), 
                                       .I3(SYMBOL_IN[12]), 
                                       .I4(SYMBOL_IN[7]), 
                                       .I5(SYMBOL_IN[6]), 
                                       .I6(SYMBOL_IN[5]), 
                                       .I7(SYMBOL_IN[4]), 
                                       .O(XLXN_97));
   (* HU_SET = "XLXI_10_45" *) 
   NOR8_MXILINX_Encoder_16_to_4  XLXI_10 (.I0(SYMBOL_IN[11]), 
                                         .I1(SYMBOL_IN[10]), 
                                         .I2(SYMBOL_IN[9]), 
                                         .I3(SYMBOL_IN[8]), 
                                         .I4(SYMBOL_IN[3]), 
                                         .I5(SYMBOL_IN[2]), 
                                         .I6(SYMBOL_IN[1]), 
                                         .I7(SYMBOL_IN[0]), 
                                         .O(XLXN_96));
   (* HU_SET = "XLXI_11_46" *) 
   OR8_MXILINX_Encoder_16_to_4  XLXI_11 (.I0(SYMBOL_IN[15]), 
                                        .I1(SYMBOL_IN[14]), 
                                        .I2(SYMBOL_IN[13]), 
                                        .I3(SYMBOL_IN[12]), 
                                        .I4(SYMBOL_IN[11]), 
                                        .I5(SYMBOL_IN[10]), 
                                        .I6(SYMBOL_IN[9]), 
                                        .I7(SYMBOL_IN[8]), 
                                        .O(XLXN_95));
   (* HU_SET = "XLXI_12_47" *) 
   NOR8_MXILINX_Encoder_16_to_4  XLXI_12 (.I0(SYMBOL_IN[7]), 
                                         .I1(SYMBOL_IN[6]), 
                                         .I2(SYMBOL_IN[5]), 
                                         .I3(SYMBOL_IN[4]), 
                                         .I4(SYMBOL_IN[3]), 
                                         .I5(SYMBOL_IN[2]), 
                                         .I6(SYMBOL_IN[1]), 
                                         .I7(SYMBOL_IN[0]), 
                                         .O(XLXN_94));
   BUF  XLXI_13 (.I(SYMBOL_IN[16]), 
                .O(DATA_OUT[4]));
   AND2  XLXI_14 (.I0(XLXN_96), 
                 .I1(XLXN_97), 
                 .O(DATA_OUT[2]));
   AND2  XLXI_15 (.I0(XLXN_94), 
                 .I1(XLXN_95), 
                 .O(DATA_OUT[3]));
endmodule
