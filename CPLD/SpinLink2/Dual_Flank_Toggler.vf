////////////////////////////////////////////////////////////////////////////////
// Copyright (c) 1995-2012 Xilinx, Inc.  All rights reserved.
////////////////////////////////////////////////////////////////////////////////
//   ____  ____ 
//  /   /\/   / 
// /___/  \  /    Vendor: Xilinx 
// \   \   \/     Version : 14.1
//  \   \         Application : sch2hdl
//  /   /         Filename : Dual_Flank_Toggler.vf
// /___/   /\     Timestamp : 08/09/2012 12:34:43
// \   \  /  \ 
//  \___\/\___\ 
//
//Command: sch2hdl -intstyle ise -family xbr -verilog C:/Users/jt/Dropbox/D-Thesis/Cpld/SpinLink/Dual_Flank_Toggler.vf -w C:/Users/jt/Dropbox/D-Thesis/Cpld/SpinLink/Dual_Flank_Toggler.sch
//Design Name: Dual_Flank_Toggler
//Device: xbr
//Purpose:
//    This verilog netlist is translated from an ECS schematic.It can be 
//    synthesized and simulated, but it should not be modified. 
//
`timescale 1ns / 1ps

module FDDC_MXILINX_Dual_Flank_Toggler(C, 
                                       CLR, 
                                       D, 
                                       Q);

   parameter INIT = 1'b0;
   
    input C;
    input CLR;
    input D;
   output Q;
   
   wire XLXN_5;
   
   GND  I_36_55 (.G(XLXN_5));
   FDDCP  XLXI_1 (.C(C), 
                 .CLR(CLR), 
                 .D(D), 
                 .PRE(XLXN_5), 
                 .Q(Q));
endmodule
`timescale 1ns / 1ps

module Dual_Flank_Toggler(CLR, 
                          SPLI, 
                          NIBBLE);

    input CLR;
    input [6:0] SPLI;
   output [6:0] NIBBLE;
   
   wire XLXN_1;
   wire XLXN_10;
   wire XLXN_12;
   wire XLXN_14;
   wire XLXN_16;
   wire XLXN_18;
   wire XLXN_20;
   wire [6:0] NIBBLE_DUMMY;
   
   assign NIBBLE[6:0] = NIBBLE_DUMMY[6:0];
   INV  XLXI_4 (.I(NIBBLE_DUMMY[0]), 
               .O(XLXN_1));
   (* HU_SET = "XLXI_5_0" *) 
   FDDC_MXILINX_Dual_Flank_Toggler #( .INIT(1'b0) ) XLXI_5 (.C(SPLI[0]), 
                                           .CLR(CLR), 
                                           .D(XLXN_1), 
                                           .Q(NIBBLE_DUMMY[0]));
   INV  XLXI_6 (.I(NIBBLE_DUMMY[1]), 
               .O(XLXN_10));
   (* HU_SET = "XLXI_7_1" *) 
   FDDC_MXILINX_Dual_Flank_Toggler #( .INIT(1'b0) ) XLXI_7 (.C(SPLI[1]), 
                                           .CLR(CLR), 
                                           .D(XLXN_10), 
                                           .Q(NIBBLE_DUMMY[1]));
   INV  XLXI_8 (.I(NIBBLE_DUMMY[2]), 
               .O(XLXN_12));
   (* HU_SET = "XLXI_9_2" *) 
   FDDC_MXILINX_Dual_Flank_Toggler #( .INIT(1'b0) ) XLXI_9 (.C(SPLI[2]), 
                                           .CLR(CLR), 
                                           .D(XLXN_12), 
                                           .Q(NIBBLE_DUMMY[2]));
   INV  XLXI_10 (.I(NIBBLE_DUMMY[3]), 
                .O(XLXN_14));
   (* HU_SET = "XLXI_11_3" *) 
   FDDC_MXILINX_Dual_Flank_Toggler #( .INIT(1'b0) ) XLXI_11 (.C(SPLI[3]), 
                                            .CLR(CLR), 
                                            .D(XLXN_14), 
                                            .Q(NIBBLE_DUMMY[3]));
   INV  XLXI_12 (.I(NIBBLE_DUMMY[4]), 
                .O(XLXN_16));
   (* HU_SET = "XLXI_13_4" *) 
   FDDC_MXILINX_Dual_Flank_Toggler #( .INIT(1'b0) ) XLXI_13 (.C(SPLI[4]), 
                                            .CLR(CLR), 
                                            .D(XLXN_16), 
                                            .Q(NIBBLE_DUMMY[4]));
   INV  XLXI_14 (.I(NIBBLE_DUMMY[5]), 
                .O(XLXN_18));
   (* HU_SET = "XLXI_15_5" *) 
   FDDC_MXILINX_Dual_Flank_Toggler #( .INIT(1'b0) ) XLXI_15 (.C(SPLI[5]), 
                                            .CLR(CLR), 
                                            .D(XLXN_18), 
                                            .Q(NIBBLE_DUMMY[5]));
   INV  XLXI_16 (.I(NIBBLE_DUMMY[6]), 
                .O(XLXN_20));
   (* HU_SET = "XLXI_17_6" *) 
   FDDC_MXILINX_Dual_Flank_Toggler #( .INIT(1'b0) ) XLXI_17 (.C(SPLI[6]), 
                                            .CLR(CLR), 
                                            .D(XLXN_20), 
                                            .Q(NIBBLE_DUMMY[6]));
endmodule
